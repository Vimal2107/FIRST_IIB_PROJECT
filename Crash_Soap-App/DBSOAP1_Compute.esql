


CREATE COMPUTE MODULE DBSOAP1_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;


CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE len INTEGER;
		--DECLARE repl_id--tot,message_id,app_name,msg_flow_name,trans_status,req,res,host_req,host_res CHARACTER;
		--DECLARE req_stamp,res_stamp CHARACTER;
	    DECLARE MESSAGE_ID,MESSAGE_TYPE,APPLICATION_NAME,MESSAGE_FLOW_NAME,CHANNEL_REQ,CHANNEL_RESPONSE,TRANSACTION_STATUS,query,Main,Status CHARACTER;
			
		DECLARE REQUEST_TIMESTAMP,RESPONSE_TIMESTAMP TIMESTAMP;
		DECLARE repl_id CHARACTER;
		DECLARE tot CHARACTER;
		DECLARE my_rply_ref REFERENCE TO InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier;
		
		SET repl_id = my_rply_ref;
		
		SET APPLICATION_NAME = ApplicationLabel;
		SET MESSAGE_FLOW_NAME = MessageFlowLabel;
		SET REQUEST_TIMESTAMP = CURRENT_TIMESTAMP;
		
		
		
		DECLARE inref REFERENCE TO InputRoot.SOAP.Body.ns:crash_input_log;
		SET CHANNEL_REQ = CAST(ASBITSTREAM(inref CCSID 1208) as CHARACTER ENCODING InputRoot.Properties.Encoding);
		SET tot = inref;
		SET MESSAGE_ID = CAST(repl_id AS CHARACTER);
		
		
		DECLARE Qwery CHARACTER 'SELECT * FROM CSVTABLE WHERE DAYS=?';
		SET CHANNEL_REQ = Qwery;
		
		SET OutputRoot.SOAP.Body.ns:crash_Output.out = PASSTHRU(Qwery.VIMALDB VALUES(tot));
		
		SET len = CARDINALITY(OutputRoot.SOAP.Body.ns:crash_Output.out[]);
		IF len = 0 THEN
			SET OutputRoot.SOAP.Body.ns:crash_Output.out = 'No record Found with the Data you have given';
			SET TRANSACTION_STATUS = 'SUCCESS';
			SET RESPONSE_TIMESTAMP = CURRENT_TIMESTAMP;
			SET CHANNEL_RESPONSE= 'No data matched with request'; 
			SET CHANNEL_RESPONSE = 'checked Database';
		ELSE
			SET OutputRoot.SOAP.Body.ns:crash_Output.out = 'Fetched data sucessfully';
			SET TRANSACTION_STATUS = 'SUCCESS';
			
			SET CHANNEL_RESPONSE = CAST(ASBITSTREAM(OutputRoot.SOAP.Body.ns:crash_Output) AS CHARACTER CCSID 1208);
			SET  RESPONSE_TIMESTAMP = CURRENT_TIMESTAMP;
			SET CHANNEL_RESPONSE = 'checked Database';
			
		END IF;
		
		 CALL PRO7 (MESSAGE_ID,MESSAGE_TYPE,APPLICATION_NAME,MESSAGE_FLOW_NAME,CHANNEL_REQ,CHANNEL_RESPONSE,TRANSACTION_STATUS,REQUEST_TIMESTAMP,RESPONSE_TIMESTAMP);
	 
		
		--SET OutputRoot = InputRoot;
	END;
END MODULE;
CREATE PROCEDURE PRO7 (IN MESSAGE_ID CHARACTER,IN MESSAGE_TYPE CHARACTER ,IN APPLICATION_NAME CHARACTER,IN MESSAGE_FLOW_NAME CHARACTER,IN CHANNEL_REQ CHARACTER,IN CHANNEL_RESPONSE CHARACTER,IN TRANSACTION_STATUS CHARACTER,IN REQUEST_TIMESTAMP TIMESTAMP,IN RESPONSE_TIMESTAMP TIMESTAMP)
LANGUAGE DATABASE
EXTERNAL NAME DBLOG_PRO;